Based on input [2,10]
1. Constructor("[2,6)") //<delim>a,b<delim> => delim -> ( | ) | [ | ]
//Succed
This 	Parameters 	Output
[2,10)	"[2,10)" 	23456789
This 	Parameters 	Output
[3,7]	"[3,7]" 	34567
//Fail
This 	Parameters 	Output
[2,10*	"[2,10*" 	Please use Brackets [] or Parenthesis ()
This 	Parameters 	Output
(3,7	"[2,7" 		Please use Brackets [] or Parenthesis ()

2. contains(points) : bool //Example taken for this [2,7)
//Succed
This 	Parameters 	Output
{3,5}	"{3,5}" 	True
This 	Parameters 	Output
{6,6}	"{6,6}" 	True
//Fail
This 	Parameters 	Output
{8,12}	"{8,12}" 	False
This 	Parameters 	Output
//Completar

3. doesNotContains(points) : bool - //Example taken for this [2,4]
//Succed
This 	Parameters 		Output
[2,4]	"{7,1,5}" 		False
This 	Parameters 		Output
[2,4]	"{10,-2,7}" 	False
//Fail	
This 	Parameters 	Output
[2,4]	"-1.10" 	False
This 	Parameters 	Output
//Completar

4. getAllPoints() : int[] - 
//Succed
This 	Parameters 		Output
[2,10)	"[2,10)" 		2345678910
This 	Parameters 		Output
[2,20)	"[2,20)" 		234567891011121314151617181920
//Fail	
This 	Parameters 	Output
[2,10]	"[210]" 	Please dont forget to use the , betweeb tge rabge
This 	Parameters 	Output
//Completar

5. containsRange(Range) : bool - based on input (1,10)
//Succed
This 		 Parameters 		Output
{3,4,6,9}	"{3,4,6,9}" 		True
This 	Parameters 		Output
{2,10}	"{2,10}" 		True
//Fail	
This 	Parameters 	Output
{2,10}	"{2,10}" 	False
This 	Parameters 	Output
//Completar

6. doesNotContainRange(Range) : bool - baseed on input (1,10)
//Succed
This 	Parameters 		Output
{11,21}	"{11,21}" 		True
This 	Parameters 		Output
{22,15}	"{22,15}" 		True
//Fail	
This 	Parameters 	Output
{2,10}	"{2,10}" 	False
This 	Parameters 	Output
//Completar

7. endPoints() : int[] -based on input [5,11]
//Succed
This 	Parameters 		Output
[5,11]	"[5,11]" 		{5,11}
This 	Parameters 		Output
[7,10]	"[7,10]" 		{7,10}
//Fail	
This 	Parameters 	Output
[1,2]	"[1,2]" 	Out of range
This 	Parameters 	Output
//Completar

8. overlapsRange(Range) : bool - based on intput [2,10)
//Succed
This 	Parameters 		Output
[1,8)	"[1,8)" 		True
This 	Parameters 		Output
[1,5)	"[1,5)" 		True
//Fail	
This 	Parameters 	Output
[1,2]	"[1,2]" 	Out of range
This 	Parameters 	Output
//Completar

9. doesNotOverlapRange(Range) : bool - base on intput [2,5]
//Succed
This 	Parameters 		Output
[7,10)	"[7,10)" 		True
This 	Parameters 		Output
[7,12)	"[7,12]" 		True
//Fail	
This 	Parameters 	Output
[2,5]	"[2,5]" 	False
This 	Parameters 	Output
//Completar

10. equals(Range) : bool - based on input [5,11)
This 	Parameters 		Output
[5,11)	"[5,11)" 		True
This 	Parameters 		Output
[5,11)	"[5,11]" 		True
//Fail	
This 	Parameters 	Output
[7,5)	"[7,5)" 	False
This 	Parameters 	Output
//Completar

11. notEquals(Range) : bool - based on input [10,25]
This 	Parameters 		Output
[10,22]	"[10,22]" 		True
This 	Parameters 		Output
[10,25)	"[10,25)" 		True
//Fail	
This 	Parameters 	Output
[10,25]	"[10,25]" 	False
This 	Parameters 	Output
